{"remainingRequest":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\src\\views\\admin\\article\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\src\\views\\admin\\article\\Add.vue","mtime":1645434865124},{"path":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645012147060},{"path":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1645012162188},{"path":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645012147060},{"path":"F:\\Program Files (x86)\\vue博客系统\\block_cms_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1645012163094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBjcmVhdGUsdXBsb2FkIH0gZnJvbSAiLi4vLi4vLi4vYXBpL2FydGljbGUiOw0KaW1wb3J0IHt0cmVlfSBmcm9tICIuLi8uLi8uLi9hcGkvY2hhbm5lbCINCmltcG9ydCB7YWxsfSBmcm9tICcuLi8uLi8uLi9hcGkvdGFnJw0KLy8gaW1wb3J0IHRoZSBjb21wb25lbnQNCmltcG9ydCBUcmVlc2VsZWN0IGZyb20gIkByaW9waGFlL3Z1ZS10cmVlc2VsZWN0IjsNCi8vIGltcG9ydCB0aGUgc3R5bGVzDQppbXBvcnQgIkByaW9waGFlL3Z1ZS10cmVlc2VsZWN0L2Rpc3QvdnVlLXRyZWVzZWxlY3QuY3NzIjsNCmltcG9ydCB0b2tlbiBmcm9tICIuLi8uLi8uLi9zdG9yZS90b2tlbiINCg0KICBleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkFkZCIsDQogICAgY29tcG9uZW50czogeyBUcmVlc2VsZWN0IH0sDQogICAgZGF0YSgpew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgdGFnTGlzdDogW10sDQogICAgICAgIGRlZkZvcm06ew0KICAgICAgICAgIHRpdGxlOicnLA0KICAgICAgICAgIGNoYW5uZWxJZDpudWxsLA0KICAgICAgICAgIHRpdGxlSW1nOicnLA0KICAgICAgICAgIHN1bW1hcnk6JycsDQogICAgICAgICAgY29tbWVudFN0YXR1czp0cnVlLA0KICAgICAgICAgIHJvdGF0aW9uOmZhbHNlLA0KICAgICAgICAgIHVybDonJywNCiAgICAgICAgICBhdXRob3I6JycsDQogICAgICAgICAgdG9wOmZhbHNlLA0KICAgICAgICAgIGNvbnRlbnQ6JycsDQogICAgICAgICAgYXR0YWNobWVudExpc3Q6IFtdLA0KICAgICAgICAgIHNlbGVjdFRhZ0xpc3Q6W10sDQogICAgICAgIH0sDQogICAgICAgIHRyZWVEYXRhOltdLA0KICAgICAgICBsb2FkaW5nOmZhbHNlLA0KICAgICAgICBydWxlczp7DQogICAgICAgICAgdGl0bGU6W3tyZXF1aXJlZDp0cnVlLG1lc3NhZ2U6J+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICBjaGFubmVsSWQ6W3tyZXF1aXJlZDp0cnVlLG1lc3NhZ2U6J+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICBzdW1tYXJ5Olt7bWF4OjIwMH1dLA0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCg0KICAgIGNyZWF0ZWQoKSB7DQoNCiAgICAgIC8v5L2c6ICF6buY6K6k5b2T5YmN55m75b2V55So5oi355qE6LSm5Y+3DQogICAgICB0aGlzLmRlZkZvcm0uYXV0aG9yID0gdG9rZW4uZ2V0VXNlcigpLm5pY2tOYW1lDQoNCiAgICAgIHRyZWUoKS50aGVuKGRhdGE9PnsNCiAgICAgICAgdGhpcy50cmVlRGF0YSA9IGRhdGEuZGF0YQ0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRyZWVEYXRhKQ0KICAgICAgIH0pLmNhdGNoKGVycm9yPT57DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IpDQogICAgICAgfSkNCiAgICAgIGFsbCgpLnRoZW4oZGF0YSA9PnsNCiAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgdGhpcy50YWdMaXN0ID0gZGF0YS5kYXRhDQogICAgICB9KS5jYXRjaChlcnJvcj0+ew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yKQ0KICAgICAgfSkNCiAgICB9LA0KICAgIG1ldGhvZHM6ew0KICAgICAgc3VibWl0Rm9ybSgpew0KICAgICAgICB0aGlzLiRyZWZzWydkZWZGb3JtJ10udmFsaWRhdGUodmFsaWQ9PnsNCiAgICAgICAgICBpZih2YWxpZCl7DQogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlDQogICAgICAgICAgICBpZih0aGlzLmRlZkZvcm0uY29tbWVudFN0YXR1cyl7DQogICAgICAgICAgICAgIHRoaXMuZGVmRm9ybS5jb21tZW50U3RhdHVzID0gMDsNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICB0aGlzLmRlZkZvcm0uY29tbWVudFN0YXR1cyA9IDE7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZih0aGlzLmRlZkZvcm0ucm90YXRpb24pew0KICAgICAgICAgICAgICB0aGlzLmRlZkZvcm0ucm90YXRpb24gPSAxOw0KICAgICAgICAgICAgfWVsc2V7DQogICAgICAgICAgICAgIHRoaXMuZGVmRm9ybS5yb3RhdGlvbiA9IDA7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZih0aGlzLmRlZkZvcm0udG9wKXsNCiAgICAgICAgICAgICAgdGhpcy5kZWZGb3JtLnRvcCA9IDE7DQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgdGhpcy5kZWZGb3JtLnRvcCA9IDA7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjcmVhdGUodGhpcy5kZWZGb3JtKS50aGVuKGRhdGE9PnsNCiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgICAgdGhpcy4kcmVmc1snZGVmRm9ybSddLnJlc2V0RmllbGRzKCkNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKGRhdGEubXNnKQ0KICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2FydGljbGUnKQ0KICAgICAgICAgICAgfSkuY2F0Y2goZXJyb3I9PnsNCiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvcikNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgfSwNCiAgICAgIGNsb3NlKCl7DQogICAgICAgIHRoaXMuJGVtaXQoImhpZGVEaWFsb2ciKQ0KICAgICAgfSwNCiAgICAgIHVwbG9hZEltZyhwYXJhbSl7DQogICAgICAgIGNvbnN0ICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOw0KICAgICAgICBmb3JtRGF0YS5hcHBlbmQoImZpbGUiLHBhcmFtLmZpbGUpDQogICAgICAgIHVwbG9hZChmb3JtRGF0YSkudGhlbihkYXRhPT57DQogICAgICAgICAgdGhpcy5kZWZGb3JtLnRpdGxlSW1nID0gZGF0YS5kYXRhDQogICAgICAgIH0pLmNhdGNoKGVycm9yPT57DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvcikNCiAgICAgICAgfSkNCiAgICAgIH0sDQogICAgICB1cGxvYWRJbWcyKHBhcmFtKXsNCiAgICAgICAgY29uc3QgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7DQogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZmlsZSIscGFyYW0uZmlsZSkNCiAgICAgICAgdXBsb2FkKGZvcm1EYXRhKS50aGVuKGRhdGE9PnsNCiAgICAgICAgICB0aGlzLmRlZkZvcm0uYXR0YWNobWVudExpc3QucHVzaCh7bmFtZTpwYXJhbS5maWxlLm5hbWUsdXJsOmRhdGEuZGF0YX0pDQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5kZWZGb3JtLmF0dGFjaG1lbnRMaXN0KQ0KICAgICAgICB9KS5jYXRjaChlcnJvcj0+ew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IpDQogICAgICAgIH0pDQogICAgICB9LA0KICAgICAgLy/kuIrkvKDkuYvliY3nmoTpqozor4ENCiAgICAgIGJlZm9yZUF2YXRhclVwbG9hZChmaWxlKXsNCiAgICAgICAgY29uc3QgaXNJTUFHRSA9IChmaWxlLnR5cGUgPT09ICdpbWFnZS9qcGVnJykgfHwgIChmaWxlLnR5cGUgPT09ICdpbWFnZS9qcGcnKSB8fCAoZmlsZS50eXBlID09PSdpbWFnZS9wbmcnKQ0KICAgICAgICBjb25zdCBpc0x0Mk0gPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8IDINCiAgICAgICAgaWYgKCFpc0lNQUdFKSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5LiK5Lyg5paH5Lu25Y+q6IO95piv5Zu+54mH5qC85byPIScpDQogICAgICAgIH0NCiAgICAgICAgaWYgKCFpc0x0Mk0pIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDmlofku7blpKflsI/kuI3og73otoXov4cgMk1CIScpDQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIGlzSU1BR0UgJiYgaXNMdDJNDQogICAgICB9LA0KICAgICAgaGFuZGxlRXhjZWVkKGZpbGVzLCBmaWxlTGlzdCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoYOW9k+WJjemZkOWItumAieaLqSAzIOS4quaWh+S7tu+8jOacrOasoemAieaLqeS6hiAke2ZpbGVzLmxlbmd0aH0g5Liq5paH5Lu277yM5YWx6YCJ5oup5LqGICR7ZmlsZXMubGVuZ3RoICsgZmlsZUxpc3QubGVuZ3RofSDkuKrmlofku7ZgKTsNCiAgICAgIH0sDQogICAgICBiZWZvcmVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHsNCiAgICAgICAgZmlsZUxpc3QuZm9yRWFjaCgoaXRlbSxpbmRleCk9PnsNCiAgICAgICAgICBpZihmaWxlLm5hbWUgPT0gaXRlbS5uYW1lKXsNCiAgICAgICAgICAgIHRoaXMuZGVmRm9ybS5hdHRhY2htZW50TGlzdC5zcGxpY2UoaW5kZXgsMSk7DQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgfSwNCiAgICB9DQogIH0NCg=="},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Add.vue","sourceRoot":"src/views/admin/article","sourcesContent":["<template>\r\n  <div>\r\n    <el-form ref=\"defForm\" :rules=\"rules\" :model=\"defForm\" label-width=\"120px\">\r\n      <el-form-item label=\"标题\" prop=\"title\">\r\n        <el-input v-model=\"defForm.title\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"栏目\" prop=\"channelId\">\r\n        <treeselect v-model=\"defForm.channelId\"\r\n                    placeholder=\"请选择栏目\"\r\n                    :multiple=\"false\"\r\n                    :options=\"treeData\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"栏目图\" prop=\"titleImg\">\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"string\"\r\n            :show-file-list=\"false\"\r\n            :http-request=\"uploadImg\"\r\n            :before-upload=\"beforeAvatarUpload\">\r\n          <img v-if=\"defForm.titleImg\" :src=\"defForm.titleImg\" class=\"avatar\">\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n\r\n      </el-form-item>\r\n      <el-form-item label=\"摘要\" prop=\"summary\">\r\n        <el-input type=\"textarea\" :autosize=\"{ minRows: 3, maxRows: 5}\" v-model=\"defForm.summary\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"作者\" prop=\"author\">\r\n        <el-input v-model=\"defForm.author\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"外链\" prop=\"url\">\r\n        <el-input v-model=\"defForm.url\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"允许评论\" prop=\"commentStatus\">\r\n        <el-switch\r\n            v-model=\"defForm.commentStatus\"\r\n            active-color=\"#13ce66\"\r\n            inactive-color=\"#999999\">\r\n        </el-switch>\r\n      </el-form-item>\r\n      <el-form-item label=\"轮播\" prop=\"rotation\">\r\n        <el-switch\r\n            v-model=\"defForm.rotation\"\r\n            active-color=\"#13ce66\"\r\n            inactive-color=\"#999999\">\r\n        </el-switch>\r\n      </el-form-item>\r\n      <el-form-item label=\"置顶\" prop=\"top\">\r\n        <el-switch\r\n            v-model=\"defForm.top\"\r\n            active-color=\"#13ce66\"\r\n            inactive-color=\"#999999\">\r\n        </el-switch>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"标签\" prop=\"selectTagList\">\r\n        <el-checkbox-group v-model=\"defForm.selectTagList\">\r\n          <el-checkbox  v-for=\"(item,index) in tagList\" :key=\"index\" :label=\"item.id\" >{{item.tagName}}</el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"附件\" prop=\"attachmentList\">\r\n        <el-upload\r\n            class=\"upload-demo\"\r\n            action=\"string\"\r\n            :before-remove=\"beforeRemove\"\r\n            multiple\r\n            :limit=\"3\"\r\n            :http-request=\"uploadImg2\"\r\n            :on-exceed=\"handleExceed\"\r\n            :file-list=\"defForm.attachmentList\">\r\n          <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n          <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n        </el-upload>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"content\" prop=\"content\">\r\n        <v-md-editor v-model=\"defForm.content\" height=\"400px\"></v-md-editor>\r\n      </el-form-item>\r\n      <el-form-item size=\"large\">\r\n        <el-button type=\"primary\" @click=\"$router.back()\" >返回</el-button>\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"submitForm\">保存</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { create,upload } from \"../../../api/article\";\r\nimport {tree} from \"../../../api/channel\"\r\nimport {all} from '../../../api/tag'\r\n// import the component\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\n// import the styles\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nimport token from \"../../../store/token\"\r\n\r\n  export default {\r\n    name: \"Add\",\r\n    components: { Treeselect },\r\n    data(){\r\n      return {\r\n        tagList: [],\r\n        defForm:{\r\n          title:'',\r\n          channelId:null,\r\n          titleImg:'',\r\n          summary:'',\r\n          commentStatus:true,\r\n          rotation:false,\r\n          url:'',\r\n          author:'',\r\n          top:false,\r\n          content:'',\r\n          attachmentList: [],\r\n          selectTagList:[],\r\n        },\r\n        treeData:[],\r\n        loading:false,\r\n        rules:{\r\n          title:[{required:true,message:'必填项不能为空'}],\r\n          channelId:[{required:true,message:'必填项不能为空'}],\r\n          summary:[{max:200}],\r\n        }\r\n      }\r\n    },\r\n\r\n    created() {\r\n\r\n      //作者默认当前登录用户的账号\r\n      this.defForm.author = token.getUser().nickName\r\n\r\n      tree().then(data=>{\r\n        this.treeData = data.data\r\n        console.log(this.treeData)\r\n       }).catch(error=>{\r\n        this.$message.error(error)\r\n       })\r\n      all().then(data =>{\r\n        console.log(data)\r\n        this.tagList = data.data\r\n      }).catch(error=>{\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    methods:{\r\n      submitForm(){\r\n        this.$refs['defForm'].validate(valid=>{\r\n          if(valid){\r\n            this.loading = true\r\n            if(this.defForm.commentStatus){\r\n              this.defForm.commentStatus = 0;\r\n            }else{\r\n              this.defForm.commentStatus = 1;\r\n            }\r\n            if(this.defForm.rotation){\r\n              this.defForm.rotation = 1;\r\n            }else{\r\n              this.defForm.rotation = 0;\r\n            }\r\n            if(this.defForm.top){\r\n              this.defForm.top = 1;\r\n            }else{\r\n              this.defForm.top = 0;\r\n            }\r\n            create(this.defForm).then(data=>{\r\n              this.loading = false\r\n              this.$refs['defForm'].resetFields()\r\n              this.$message.success(data.msg)\r\n              this.$router.push('/article')\r\n            }).catch(error=>{\r\n              this.loading = false\r\n              this.$message.error(error)\r\n            })\r\n          }\r\n        })\r\n      },\r\n      close(){\r\n        this.$emit(\"hideDialog\")\r\n      },\r\n      uploadImg(param){\r\n        const  formData = new FormData();\r\n        formData.append(\"file\",param.file)\r\n        upload(formData).then(data=>{\r\n          this.defForm.titleImg = data.data\r\n        }).catch(error=>{\r\n          this.$message.error(error)\r\n        })\r\n      },\r\n      uploadImg2(param){\r\n        const  formData = new FormData();\r\n        formData.append(\"file\",param.file)\r\n        upload(formData).then(data=>{\r\n          this.defForm.attachmentList.push({name:param.file.name,url:data.data})\r\n          console.log(this.defForm.attachmentList)\r\n        }).catch(error=>{\r\n          this.$message.error(error)\r\n        })\r\n      },\r\n      //上传之前的验证\r\n      beforeAvatarUpload(file){\r\n        const isIMAGE = (file.type === 'image/jpeg') ||  (file.type === 'image/jpg') || (file.type ==='image/png')\r\n        const isLt2M = file.size / 1024 / 1024 < 2\r\n        if (!isIMAGE) {\r\n          this.$message.error('上传文件只能是图片格式!')\r\n        }\r\n        if (!isLt2M) {\r\n          this.$message.error('上传文件大小不能超过 2MB!')\r\n        }\r\n        return isIMAGE && isLt2M\r\n      },\r\n      handleExceed(files, fileList) {\r\n        this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\r\n      },\r\n      beforeRemove(file, fileList) {\r\n        fileList.forEach((item,index)=>{\r\n          if(file.name == item.name){\r\n            this.defForm.attachmentList.splice(index,1);\r\n          }\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-uploader{\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    width:80px;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 80px;\r\n    height: 80px;\r\n    line-height: 80px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n  }\r\n</style>"]}]}